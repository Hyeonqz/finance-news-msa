server:
  port: 8761 # 8761은 Eureka의 기본 포트 (관례)

eureka:
  # instance 설정
  instance:
    hostname: localhost # Eureka Server의 hostname
    instance-id: ${spring.application.name}:${server.port} # eureka-server:8761
    prefer-ip-address: false

  # client 설정
  client:
    register-with-eureka: false # 자신은 Eureka Server 에 등록하지 않는다. 이중화 서버는 true
    fetch-registry: false # 다른 Eureka Server 로부터 서비스 목록을 가져오지 않음.
    # 자기 자신의 주소 사용: http://localhost:8761/eureka/
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

  # 개발 환경 설정
  server:
    # true: 네트워크 장애 의심 시 서비스를 제거하지 않고 보존
    # false: heartbeat 없으면 즉시 제거
    enable-self-preservation: false
    # 만료된 인스턴스를 레지스트리에서 제거하는 주기 (밀리초)
    eviction-interval-timer-in-ms: 30000
    # Self Preservation Mode 진입 임계값
    renewal-percent-threshold: 0.49

    # Response Cache 설정
    # Eureka Server의 응답 캐시 갱신 주기 (밀리초)
    response-cache-update-interval-ms: 30000
    # 응답 캐시의 자동 만료 시간 (초)
    response-cache-auto-expiration-in-seconds: 180

    # Peer 동기화 설정
    # Peer Eureka Server와 동기화 시 사용할 최대 스레드 수
    max-threads-for-peer-replication: 20
    # Peer 동기화용 최소 스레드 수
    min-threads-for-peer-replication: 5

management:
  endpoints:
    web:
      exposure:
        include: "*"
      # 모든 Actuator 엔드포인트 노출
      # "*": health, info, metrics, env, beans, threaddump 등 전체
      # 실무: 개발 환경은 "*", 운영은 필요한 것만 지정
      # 보안 취약점 될 수 있으므로 운영에서는 제한 필수

  endpoint:
    health:
      show-details: always
      # health 엔드포인트의 상세 정보 항상 표시
      # 개발 환경에서 문제 파악 용이
      # 실무: 운영에서는 when-authorized 권장
  metrics:
    export:
      prometheus:
        enabled: true
        # Prometheus 메트릭 수집 활성화
        # /actuator/prometheus 엔드포인트 생성
        # 실무: Prometheus + Grafana 모니터링 구성 시 필수
        # Eureka Server의 등록 서비스 수, 응답 시간 등 메트릭 수집
  tracing:
    sampling:
      probability: 1.0
        # 분산 추적(Distributed Tracing) 샘플링 비율
        # 1.0 = 100% (모든 요청 추적)
        # 0.1 = 10% (요청의 10%만 추적)
        # 실무: 개발 환경은 1.0, 운영은 0.1~0.5
        # 너무 높으면 추적 시스템(Zipkin/Jaeger) 부하 증가

logging:
  level:
    com.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG